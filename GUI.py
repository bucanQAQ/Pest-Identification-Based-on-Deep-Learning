# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Image_classify.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from torchvision import models
import torch.nn as nn


from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QDialog
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import sys
from remove_bg import remove_background


from prediction import pre


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(544, 616)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        Dialog.setFont(font)
        self.selectImage_Btn = QtWidgets.QPushButton(Dialog)
        self.selectImage_Btn.setGeometry(QtCore.QRect(90, 350, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.selectImage_Btn.setFont(font)
        self.selectImage_Btn.setObjectName("selectImage_Btn")
        self.run_Btn = QtWidgets.QPushButton(Dialog)
        self.run_Btn.setGeometry(QtCore.QRect(360, 350, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(12)
        self.run_Btn.setFont(font)
        self.run_Btn.setObjectName("run_Btn")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(90, 260, 91, 31))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(90, 300, 121, 31))
        self.label_2.setObjectName("label_2")
        self.display_result = QtWidgets.QLabel(Dialog)
        self.display_result.setGeometry(QtCore.QRect(190, 270, 221, 16))
        self.display_result.setText("")
        self.display_result.setObjectName("display_result")
        self.disply_acc = QtWidgets.QLabel(Dialog)
        self.disply_acc.setGeometry(QtCore.QRect(190, 310, 191, 16))
        self.disply_acc.setText("")
        self.disply_acc.setObjectName("disply_acc")
        self.gridLayoutWidget = QtWidgets.QWidget(Dialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(89, 10, 391, 251))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_image = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_image.setText("")
        self.label_image.setObjectName("label_image")
        self.gridLayout.addWidget(self.label_image, 0, 0, 1, 1)
        self.modelBox = QtWidgets.QComboBox(Dialog)
        self.modelBox.setGeometry(QtCore.QRect(360, 440, 131, 51))
        self.modelBox.setObjectName("modelBox")
        self.modelBox.addItem("")
        self.modelBox.addItem("")
        self.modelBox.addItem("")
        self.modelBox.addItem("")
        self.modelBox.addItem("")
        self.isbgBox = QtWidgets.QComboBox(Dialog)
        self.isbgBox.setGeometry(QtCore.QRect(90, 440, 131, 51))
        self.isbgBox.setObjectName("isbgBox")
        self.isbgBox.addItem("")
        self.isbgBox.addItem("")


        self.retranslateUi(Dialog)
        self.selectImage_Btn.clicked.connect(Dialog.openImage)
        self.run_Btn.clicked.connect(Dialog.run)
        self.isbgBox.currentIndexChanged.connect(Dialog.is_remove_bg)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.selectImage_Btn.setText(_translate("Dialog", "Select image"))
        self.run_Btn.setText(_translate("Dialog", "Run"))
        self.label.setText(_translate("Dialog", "Result:"))
        self.label_2.setText(_translate("Dialog", "Accuracy:"))
        self.modelBox.setItemText(0, _translate("Dialog", "Resnet18"))
        self.modelBox.setItemText(1, _translate("Dialog", "Resnet34"))
        self.modelBox.setItemText(2, _translate("Dialog", "Resnet50"))
        self.modelBox.setItemText(3, _translate("Dialog", "Resnet101"))
        self.modelBox.setItemText(4, _translate("Dialog", "Resnet152"))
        self.modelBox.setItemData(0, 'Resnet18')
        self.modelBox.setItemData(1,'Resnet34')
        self.modelBox.setItemData(2, 'Resnet50')
        self.modelBox.setItemData(3, 'Resnet101')
        self.modelBox.setItemData(4, 'Resnet152')
        self.isbgBox.setItemText(0, _translate("Dialog", "No remove_bg"))
        self.isbgBox.setItemText(1, _translate("Dialog", "Remove bg"))
        self.isbgBox.setItemData(0,False)
        self.isbgBox.setItemData(1,True)



class MainDialog(QDialog):
    def __init__(self, parent=None):
        super(QDialog, self).__init__(parent)
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)
        self.setWindowTitle("Pest_identification")



    def openImage(self):
        global fname
        imgName, imgType = QFileDialog.getOpenFileName(self, "Select image", "", "*.jpeg;;*.png;;*jpg;;All Files(*)")
        jpg = QPixmap(imgName).scaled(self.ui.label_image.width(), self.ui.label_image.height())
        self.ui.label_image.setPixmap(jpg)
        fname = imgName

    def is_remove_bg(self):
        global re_name
        current_bg = self.ui.isbgBox.currentData()
        print(current_bg)
        re_name = 're_bg.jpeg'
        if current_bg:
            remove_background(fname,re_name)
            jpg = QPixmap(re_name).scaled(self.ui.label_image.width(), self.ui.label_image.height())
            self.ui.label_image.setPixmap(jpg)
        else:
            jpg = QPixmap(fname).scaled(self.ui.label_image.width(), self.ui.label_image.height())
            self.ui.label_image.setPixmap(jpg)



    def run(self):
        global fname
        global re_name
        current_model = self.ui.modelBox.currentData()
        current_bg = self.ui.isbgBox.currentData()

        if current_bg:
            file_name = re_name
        else:
            file_name = fname

        if current_bg:
            model_path = "./models/rembg_models/" + current_model + "/" + current_model + ".pth"
        else:
            model_path = "./models/no_rembg_models/"+current_model+ "/" + current_model + ".pth"
        model = {
            "Resnet18": models.resnet18(pretrained=True),
            "Resnet34": models.resnet34(pretrained=True),
            "Resnet50": models.resnet50(pretrained=True),
            "Resnet101": models.resnet101(pretrained=True),
            "Resnet152": models.resnet152(pretrained=True),
        }

        use_model = model[current_model]
        file_name = str(file_name)
        fc_inputs =use_model.fc.in_features
        use_model.fc = nn.Sequential(
            nn.Linear(fc_inputs, 256),
            nn.ReLU(),  # Activation functions
            nn.Dropout(0.4),  # Dropout is to prevent overfitting
            nn.Linear(256, 5),
            nn.LogSoftmax(dim=1)
        )
        print(model_path)
        a, b = pre(use_model,model_path,file_name)
        self.ui.display_result.setText(a)
        self.ui.disply_acc.setText(str(b))


if __name__ == '__main__':
    myapp = QApplication(sys.argv)
    myDlg =MainDialog()
    myDlg.show()
    sys.exit(myapp.exec_())
